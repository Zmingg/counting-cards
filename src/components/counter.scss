@import "../style/colors.scss";

/* width */
$width: 1em;
/* font size */
$font-size: 1em;
/* the segmentation-line's height */
$segmentation-height: .04em;
/* margin */
$margin: .1em;

$color-1: #164571;
$color-2: #2978c2;
/* colors */
$background-color-top: linear-gradient($color-1, $color-2);;
$background-color-bottom: linear-gradient($color-2, $color-1);;
$border-color: #fff;

$border-width: 0;

// $font-color: #fff;
/* perspective */
$perspective: 50px;

button {
  display: block;
  height: 50px;
}

.ui-counter {
  font-weight: bold;
  $counter-height: calc(#{$font-size} + #{$segmentation-height} * 2);
  $half-height: calc(#{$font-size} * .5);
  $place-holder-height: calc($counter-height - $half-height);
  $border-radius: calc(#{$font-size} * .1);
  display: inline-block;

  .counter-num {
    width: $width;
    height: $counter-height;
    line-height: $counter-height;
    font-size: $font-size;
    text-align: center;
    background: transparent;
    margin: 0 $margin;

    position: relative;;
    display: inline-block;

    .static {
      height: $counter-height;
      position: relative;
    }

    .segmentation {
      height: $segmentation-height;
      background: transparent;
    }
    
    .placeholder {
      height: $place-holder-height;
      background: transparent;
      overflow: hidden;
    }

    .top, .bottom {
      height: $half-height;
      // color: $font-color;
      border-color: $border-color;
      border-style: solid;
      box-shadow: inset 0 .01em .05em .01em rgb(8, 30, 128);
    }

    .current, .next {
      height: $counter-height;
    }

    .top {
      border-radius: $border-radius $border-radius 0 0;
      position: relative;
      overflow: hidden;
      background: $background-color-top;
      border-width: $border-width $border-width 0 $border-width;

      span {
        top: 0;
      }
    }

    .bottom {
      border-radius: 0 0 $border-radius $border-radius;
      position: relative;
      overflow: hidden;
      background: $background-color-bottom;
      border-width: 0 $border-width $border-width $border-width;

      span {
        bottom: 0;
      }
    }

    span {
      // color: $font-color;
      height: $counter-height;
      position: absolute;
      left: 0;
      right: 0;
      text-shadow: -0.01em -0.01em white, .02em .02em rgb(105, 105, 105);
    }

    .rotate {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: $counter-height;
      transform-style: preserve-3d;
      backface-visibility: hidden;
    }

    .current {
      width: 100%;
      position: absolute;
      backface-visibility:hidden;
      transform-style: preserve-3d;
    }

    .next {
      width: 100%;
      bottom: 0;
      left: 0;
      right: 0;
      position: absolute;
      transform: rotateX(180deg);
      transition: all 0ms linear;
      backface-visibility:hidden;
      transform-style: preserve-3d;
    }
    
    
  }
}

.rotate-enter {
  transform: perspective($perspective) rotateX(0deg);
}

.rotate-enter-done {
  transform: perspective($perspective) rotateX(-180deg);
  transition: all 0ms linear;
}
